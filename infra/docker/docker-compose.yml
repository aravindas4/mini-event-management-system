services:
  mysql:
    image: mysql:8.0
    container_name: mes_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - mes_network

  api:
    build:
      context: ../../
      dockerfile: infra/docker/Dockerfile
      target: production
    container_name: mes_api
    restart: always
    environment:
      # Database configuration
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      
      # Application configuration
      APP_ENV: ${APP_ENV}
      DEBUG: ${DEBUG}
      LOG_LEVEL: ${LOG_LEVEL}
      
      # Server configuration
      UVICORN_HOST: ${UVICORN_HOST}
      UVICORN_PORT: ${UVICORN_PORT}
    ports:
      - "${API_PORT}:8000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - mes_network

volumes:
  mysql_data:
    driver: local

networks:
  mes_network:
    driver: bridge
